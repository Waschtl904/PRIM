[build-system]
requires = ["setuptools>=61.0", "setuptools-scm", "wheel", "Cython", "numpy"]
build-backend = "setuptools.build_meta"

[project]
name = "prim"
authors = [
    {name = "Sebastian Waschtl", email = "your.email@example.com"},
]
description = "Modulares Framework fÃ¼r Primzahltests und -analysen"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["primes", "mathematics", "algorithms", "cryptography", "number-theory"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C",
    "Programming Language :: Cython",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "matplotlib>=3.5.0",
    "numba>=0.56.0",
    "seaborn>=0.11.0",
    "tqdm>=4.62.0",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "flake8>=5.0.0",
    "black>=22.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "twine>=4.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "nbsphinx>=0.8.9",
]
benchmarks = [
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
    "openpyxl>=3.0.10",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
    "plotly>=5.0.0",
]

[project.scripts]
prim = "prim.cli.main:main"
prim-benchmark = "prim.analysis.benchmarks:cli_main"
prim-gap = "prim.analysis.prime_gap:cli_main"

[project.urls]
Homepage = "https://github.com/Waschtl904/PRIM"
Repository = "https://github.com/Waschtl904/PRIM.git"
Documentation = "https://waschtl904.github.io/PRIM/"
Changelog = "https://github.com/Waschtl904/PRIM/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/Waschtl904/PRIM/issues"

[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["prim*"]

[tool.setuptools.package-data]
prim = ["*.pyx", "*.pxd", "*.c", "*.h"]

[tool.setuptools_scm]
write_to = "src/prim/_version.py"
version_scheme = "post-release"
local_scheme = "dirty-tag"

# Testing Configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--cov=prim",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--strict-markers",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmark tests",
    "requires_c: marks tests that require C extensions",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Code Coverage
[tool.coverage.run]
source = ["src/prim"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "src/prim/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Code Formatting
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | docs
)/
'''

# Type Checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "numba.*",
    "matplotlib.*",
    "seaborn.*",
    "pandas.*",
    "scipy.*",
]
ignore_missing_imports = true

# Flake8 Configuration
[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".tox",
    "docs",
]
per-file-ignores = [
    "__init__.py:F401",  # imported but unused
    "tests/*:D",         # no docstrings in tests
]